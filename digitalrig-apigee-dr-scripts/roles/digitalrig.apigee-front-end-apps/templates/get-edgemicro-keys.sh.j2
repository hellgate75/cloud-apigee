#!/bin/bash
EDGEMICRO_ORG="{{ edgemicro_org }}"
EDGEMICRO_ENV="{{ edgemicro_env }}"
EDGEMICRO_USER="{{ edgemicro_user }}"
EDGEMICRO_PASS="{{ edgemicro_pass }}"
EDGEMICRO_CONSUMER_CREDENTIALS="{{ edgemicro_consumer_credentials }}"
EDGEMICRO_PRIVATE_CLOUD="{{ edgemicro_private_cloud }}"
EDGEMICRO_ROUTER="{{ edgemicro_router }}"
EDGEMICRO_API_MNGMT="{{ edgemicro_api_mngmt }}"

echo "Checking  APIGEE Edge Microgateway ... "
if  [ -z "$EDGEMICRO_ORG" ] ||  [ -z "$EDGEMICRO_ENV" ] ; then
  echo "No Organization and/or Environment provided in environment variables ..."
  exit 1
fi

if  [ -z "$EDGEMICRO_USER" ] ||  [ -z "$EDGEMICRO_PASS" ]; then
  echo "No User, Password, Auth Key, and/or Auth Secret provided in environment variables ..."
  exit 1
fi

echo "Init APIGEE Edge Microgateway ... "
edgemicro init

echo "APIGEE Edge Microgateway - ORG: $EDGEMICRO_ORG"
echo "APIGEE Edge Microgateway - ENV: $EDGEMICRO_ENV"
echo "APIGEE Edge Microgateway - USER: $EDGEMICRO_USER"
echo "APIGEE Edge Microgateway - PASSWORD: (Password...)"

echo ""
echo ""
if [[ "yes" == "$EDGEMICRO_PRIVATE_CLOUD" ]] && ! [[ -z "$EDGEMICRO_API_MNGMT" ]] && ! [[ -z "$EDGEMICRO_ROUTER" ]]; then
  echo "Configuring Private APIGEE Edge Microgateway ..."
  edgemicro private configure -o $EDGEMICRO_ORG -e $EDGEMICRO_ENV -u $EDGEMICRO_USER -p $EDGEMICRO_PASS -r $EDGEMICRO_ROUTER -m $EDGEMICRO_API_MNGMT > /root/.edgemicro/.config_out
  chmod 777 /root/.edgemicro/.config_out
  cat /root/.edgemicro/.config_out
  if [[ -z "$(cat /root/.edgemicro/.config_out| grep '  secret: ')" ]] || [[ -z "$(cat /root/.edgemicro/.config_out| grep '  key: ')" ]]; then
    echo "Replay, probably it should donwload products from revisions ...."
    edgemicro private configure -o $EDGEMICRO_ORG -e $EDGEMICRO_ENV -u $EDGEMICRO_USER -p $EDGEMICRO_PASS -r $EDGEMICRO_ROUTER -m $EDGEMICRO_API_MNGMT > /root/.edgemicro/.config_out
  fi
else
  echo "Configuring APIGEE Edge Microgateway ... "
  edgemicro configure -d -o $EDGEMICRO_ORG -e $EDGEMICRO_ENV -u $EDGEMICRO_USER -p $EDGEMICRO_PASS > /root/.edgemicro/.config_out
  chmod 777 /root/.edgemicro/.config_out
  cat /root/.edgemicro/.config_out
  if [[ -z "$(cat /root/.edgemicro/.config_out| grep '  secret: ')" ]] || [[ -z "$(cat /root/.edgemicro/.config_out| grep '  key: ')" ]]; then
    echo "Replay, probably it should donwload products from revisions ...."
    edgemicro configure -d -o $EDGEMICRO_ORG -e $EDGEMICRO_ENV -u $EDGEMICRO_USER -p $EDGEMICRO_PASS > /root/.edgemicro/.config_out
  fi
fi
echo ""
echo ""
echo "Assigning APIGEE extra variables ..."
echo ""
echo ""
EDGEMICRO_KEY="$(tail -n 4 /root/.edgemicro/.config_out | grep '  key: '|sed 's/  key: //g')"
EDGEMICRO_SECRET="$(tail -n 4 /root/.edgemicro/.config_out | grep '  secret: '|sed 's/  secret: //g')"
echo "Defining server certificate ...."
mkdir -p /root/.ssh
cat /root/.edgemicro/.config_out | sed 's/.*-----BEGIN CERTIFICATE-----/-----BEGIN CERTIFICATE-----/g'|awk '/-----BEGIN CERTIFICATE-----/{i++}i'|awk '/-----END CERTIFICATE----/{exit}1' > /root/.ssh/cert.pem && \
echo '-----END CERTIFICATE-----' >> /root/.ssh/cert.pem
cp root/.ssh/cert.pem /root/ssl/apigee.crt
# echo ""
# echo ""
# echo "Generating APIGEE Edge Microgateway Internal Use keys ..."
# edgemicro genkeys -o $EDGEMICRO_ORG -e $EDGEMICRO_ENV -u $EDGEMICRO_USER -p $EDGEMICRO_PASS
echo ""
echo ""
echo "Verifying APIGEE Edge Microgateway connectivity ..."
edgemicro verify -o $EDGEMICRO_ORG -e $EDGEMICRO_ENV -k $EDGEMICRO_KEY -s $EDGEMICRO_SECRET
echo ""
echo ""

echo ""
echo "Done!!"
echo "Defined and tested certificate!!"
